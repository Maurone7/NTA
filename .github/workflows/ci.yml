name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }} (Node ${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (JUnit output)
        env:
          NTA_TEST: '1'
        run: |
          # Run Mocha with the JUnit reporter via npx so we get a machine-readable report
          mkdir -p reports
          npx mocha --recursive tests --reporter mocha-junit-reporter --reporter-options mochaFile=reports/junit.xml --ignore tests/e2e/**

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-${{ matrix.os }}
          path: reports/junit.xml

      - name: Run Playwright E2E tests (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm ci
          npx playwright install --with-deps
          npx playwright test --reporter=list
        env:
          CI: '1'

  package-windows:
    name: Build Windows installer
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build (Windows)
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'
        run: npm run build:win --if-present

      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nta-windows-dist
          path: dist

  package-mac:
    name: Build macOS artifacts
    runs-on: macos-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build (macOS)
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'
        run: npm run build:mac --if-present

      - name: Upload macOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nta-macos-dist
          path: dist
